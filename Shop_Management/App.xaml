<Application x:Class="Shop_Management.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:Controls="clr-namespace:Shop_Management.Controls"
             StartupUri="MainWindow.xaml" >
            <!-- StartupUri="Controls/Login.xaml"
             >-->
           
    <Application.Resources>
        <!--窗体样式 Begin-->
        <ControlTemplate x:Key="WindowTemplateKey" TargetType="{x:Type Window}">
            <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                <Grid>
                    <AdornerDecorator>
                        <ContentPresenter />
                    </AdornerDecorator>
                    <ResizeGrip Visibility="Collapsed" IsTabStop="false" HorizontalAlignment="Right" x:Name="WindowResizeGrip" VerticalAlignment="Bottom" />
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="ResizeMode" Value="CanResizeWithGrip" />
                        <Condition Property="WindowState" Value="Normal" />
                    </MultiTrigger.Conditions>
                    <Setter Property="Visibility" TargetName="WindowResizeGrip" Value="Visible" />
                </MultiTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="BaseWindowControlTemplate" TargetType="{x:Type Window}">
            <DockPanel LastChildFill="True">
                <!--外边框-->
                <Border Width="Auto" Height="Auto" DockPanel.Dock="Top" Background="#303e59" CornerRadius="0,0,0,0" x:Name="borderTitle">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="36"></ColumnDefinition>
                            <ColumnDefinition Width="*"></ColumnDefinition>
                            <ColumnDefinition Width="*"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <!--窗体图标-->
                        <Image Grid.Column="0"  Source="Images/icon_title_shop.png" Width="25" Height="25" Stretch="Fill"></Image>
                        <TextBlock Grid.Column="1"   Margin="20,0,2,2"  Name="Title" VerticalAlignment="Center" FontSize="20" Foreground="White" Text="{TemplateBinding Title}"/>
                        <StackPanel Grid.Column="2" HorizontalAlignment="Right" Orientation="Horizontal">
                            <!--最小化按钮-->
                            <Button x:Name="btnMin" Content="M" Margin="0,0,0,0" Style="{DynamicResource MinButtonStyle}" Width="36" Height="36"/>
                            <!--最大化按钮-->
                            <Button x:Name="btnMax" Content="M" Margin="0,0,0,0" Style="{DynamicResource MaxButtonStyle}" Width="36" Height="36"/>
                            <!--关闭按钮-->
                            <Button x:Name="btnClose" Content="M" Margin="0,0,0,0" Style="{DynamicResource CloseButtonStyle}" Width="36" Height="36"/>
                        </StackPanel>
                    </Grid>
                </Border>
                <Border Width="Auto" Height="25" DockPanel.Dock="Bottom"  Background="#303e59" x:Name="bottomBorder">
                    <Grid>
                        <TextBlock Padding="0" Text="购物管理系统 版本：v1.0.0.0" FontSize="13" Foreground="White" Margin="0,0,10,0" HorizontalAlignment="Right" />
                    </Grid>
                </Border>
                <Border  Background="{TemplateBinding Background}" BorderBrush="#477BD1" BorderThickness="0,0,0,0" Width="Auto" Height="Auto" CornerRadius="0,0,0,0">
                    <AdornerDecorator>
                        <ContentPresenter />
                    </AdornerDecorator>
                </Border>
            </DockPanel>
        </ControlTemplate>

        <Style x:Key="BaseWindowStyle" TargetType="{x:Type Window}">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
            <Setter Property="Template" Value="{StaticResource BaseWindowControlTemplate}"/>
            <Setter Property="AllowsTransparency" Value="True" />
            <Setter Property="WindowStyle" Value="None" />
            <Setter Property="BorderBrush" Value="#477BD1" />
            <Setter Property="BorderThickness" Value="0,0,0,3" />
            <!--<Setter Property="Icon" Value="icon_sensing.ico"/>-->
            <Style.Triggers>
                <Trigger Property="ResizeMode" Value="CanResizeWithGrip">
                    <Setter Property="Template" Value="{StaticResource WindowTemplateKey}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <!--最小化按钮-->
        <Style x:Key="MinButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Foreground" Value="White"/>
            <!--修改模板属性-->
            <Setter Property="Template">
                <Setter.Value>
                    <!--控件模板-->
                    <ControlTemplate TargetType="Button">
                        <!--背景色-->
                        <Image Name="img" Source="Images/windowstate_minimality.png"/>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Source" TargetName="img" Value="Images/windowstate_minimality.png"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Source" TargetName="img" Value="Images/windowstate_minimality.png"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--最大化按钮-->
        <Style x:Key="MaxButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Foreground" Value="White"/>
            <!--修改模板属性-->
            <Setter Property="Template">
                <Setter.Value>
                    <!--控件模板-->
                    <ControlTemplate TargetType="Button">
                        <!--背景色-->
                        <Image Name="img" Source="Images/windowstate_maximization.png"/>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Source" TargetName="img" Value="Images/windowstate_maximization.png"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Source" TargetName="img" Value="Images/windowstate_maximization.png"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <!--关闭按钮-->
        <Style x:Key="CloseButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Foreground" Value="White"/>
            <!--修改模板属性-->
            <Setter Property="Template">
                <Setter.Value>
                    <!--控件模板-->
                    <ControlTemplate TargetType="Button">
                        <!--背景色-->
                        <Image Name="img" Source="Images/windowstate_closed.png"/>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                               <Setter Property="Source" TargetName="img" Value="Images/windowstate_closed.png"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Source" TargetName="img" Value="Images/windowstate_closed1.png"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--还原按钮-->
        <Style x:Key="RestoreButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Foreground" Value="White"/>
            <!--修改模板属性-->
            <Setter Property="Template">
                <Setter.Value>
                    <!--控件模板-->
                    <ControlTemplate TargetType="Button">
                        <!--背景色-->
                        <Image Name="img" Source="Images/windowstate_reductive.png"/>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Source" TargetName="img" Value="Images/windowstate_reductive.png"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Source" TargetName="img" Value="Images/windowstate_reductive.png"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--窗体样式 End-->
        
        <!--ImageButton Begin-->
        <Style TargetType="{x:Type Controls:ImageButton}">
            <Setter Property="Foreground" Value="White"></Setter>
            <Setter Property="Background" Value="Transparent"></Setter>
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="Template">
                <!--这是模板的意思-->
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Controls:ImageButton}">
                        <Grid Background="{TemplateBinding Background}" IsEnabled="False">
                            <Image x:Name="btnImage" Stretch="Fill" Source="{Binding RelativeSource={RelativeSource TemplatedParent},Path=Image}"/>
                            <ContentPresenter x:Name="txt" Visibility="Visible" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Source" TargetName="btnImage" Value="{Binding RelativeSource={RelativeSource TemplatedParent},Path=PressedImage}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Source" TargetName="btnImage" Value="{Binding RelativeSource={RelativeSource TemplatedParent},Path=PressedImage}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--ImageButton End-->

        <!--DataGrid模板 Begin-->
        <Style TargetType="DataGridColumnHeader"  x:Key="DataGridHeaderStyleSample" >
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="DataGridColumnHeader">
                        <Grid Name="Root">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Rectangle x:Name="BackgroundRectangle" Stretch="Fill" Height="25" Fill="#36ad52" Grid.ColumnSpan="2" Grid.RowSpan="2"  />
                            <ContentPresenter x:Name="HeaderText"  Grid.RowSpan="2" Content="{TemplateBinding Content}" Cursor="{TemplateBinding Cursor}"  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}" />
                            <Rectangle Name="VerticalSeparator" Grid.RowSpan="2" Grid.Column="2" Width="2" VerticalAlignment="Stretch"  Fill="#FFA6A6A6" Visibility="Visible" />
                            <!--这里的Fill就可以设置分隔线的颜色-->
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--DataGrid模板 End-->
    </Application.Resources>
</Application>
